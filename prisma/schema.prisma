generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model clientes {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  dni       String @unique @db.VarChar(8)
  direccion String @db.VarChar(100)
  celular   String @db.VarChar(13)
  correo    String @unique @db.VarChar(50)
  condicion String @db.VarChar(20)
}

model ideas {
  id   Int    @id @default(autoincrement())
  foto String @db.VarChar(255)
}

model mensajes {
  id           Int      @id @default(autoincrement())
  nombre       String   @db.VarChar(150)
  celular      String   @db.VarChar(13)
  correo       String   @unique @db.VarChar(50)
  fecha        DateTime @default(now()) @db.Timestamp(6)
  comunicacion String   @db.VarChar(30)
  mensaje      String
  response     String?
}

model preguntas {
  id        Int    @id @default(autoincrement())
  pregunta  String
  respuesta String
}

model promociones {
  id             Int      @id @default(autoincrement())
  titulo         String   @unique @db.VarChar(255)
  descripcion    String
  fecha_inicio   DateTime @db.Date
  fecha_termino  DateTime @db.Date
  imagen_url     String   @db.VarChar(255)
  creado_en      DateTime @default(now()) @db.Timestamp(6)
  creado_por     String   @db.VarChar(100)
  is_active      Boolean
  actualizado_en DateTime @default(now()) @db.Timestamp(6)
}

model User {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  password     String
  resetToken   String?
  resetExpires DateTime?
}

model Producto {
  id             Int          @id @default(autoincrement())
  nombre         String
  descripcion    String?
  precio         Float
  activo         Boolean      @default(true)
  imagenUrl      String?
  marcaId        Int
  tipoProductoId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  marca          Marca        @relation(fields: [marcaId], references: [id])
  tipoProducto   TipoProducto @relation(fields: [tipoProductoId], references: [id])
}

model Marca {
  id                 Int                 @id @default(autoincrement())
  nombre             String              @unique
  productos          Producto[]
  tipoProductosMarca TipoProductoMarca[]
}

model TipoProducto {
  id        Int                 @id @default(autoincrement())
  nombre    String              @unique
  productos Producto[]
  marcas    TipoProductoMarca[]
}

model TipoProductoMarca {
  marcaId        Int
  tipoProductoId Int
  marca          Marca        @relation(fields: [marcaId], references: [id])
  tipoProducto   TipoProducto @relation(fields: [tipoProductoId], references: [id])

  @@id([marcaId, tipoProductoId])
}
